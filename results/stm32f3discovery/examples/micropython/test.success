miniterm.py --eol LF "/dev/riot/tty-stm32f3discovery" "115200"
--- Miniterm on /dev/riot/tty-stm32f3discovery  115200,8,N,1 ---
--- Quit: Ctrl+] | Menu: Ctrl+T | Help: Ctrl+T followed by Ctrl+H ---
main(): This is RIOT! (Version: riot/2020.01-branch)
-- Executing boot.py
boot.py: MicroPython says hello!
-- boot.py exited. Starting REPL..
MicroPython v1.4.2-6566-g5c45688d431 on 2020-01-16; riot-stm32f3discovery with stm32f3
Type "help()" for more information.
>>> print("echo this! " * 4)
print("echo this! " * 4)
echo this! echo this! echo this! echo this! 
>>> import riot
print(riot.thread_getpid())
import riot
>>> print(riot.thread_getpid())
2
>>> import utime
import utime
>>> utime.time()
utime.time()
301
>>> utime.sleep_ms(0)
utime.sleep_ms(0)
>>> utime.time()
utime.time()
412
>>> test_sleep(0, 1000): slept 111ms
utime.time()
utime.time()
468
>>> utime.sleep_ms(50)
utime.sleep_ms(50)
>>> utime.time()
utime.time()
629
>>> test_sleep(50, 122): slept 161ms
utime.time()
utime.time()
684
>>> utime.sleep_ms(250)
utime.sleep_ms(250)
>>> utime.time()
utime.time()
1044
>>> test_sleep(250, 122): slept 360ms
utime.time()
utime.time()
1099
>>> utime.sleep_ms(500)
utime.sleep_ms(500)
>>> utime.time()
utime.time()
1709
>>> test_sleep(500, 122): slept 610ms
import xtimer
import xtimer
>>> a = 0
a = 0
>>> def inc_a(): global a; a+=1
def inc_a(): global a; a+=1
... 

>>> t = xtimer.xtimer(inc_a)
t = xtimer.xtimer(inc_a)
>>> utime.time()
utime.time()
2035
>>> t.set(500000)
t.set(500000)
>>> while a==0: pass
while a==0: pass
... 

>>> utime.time()
utime.time()
2645
>>> [TEST PASSED]

